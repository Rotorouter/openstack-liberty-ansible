---
# Install and set up our SQL databases
# http://docs.openstack.org/liberty/install-guide-ubuntu/environment-sql-database.html
#
- hosts: [liberty-controllers]
  remote_user: "{{ SYSADMIN_NAME }}"
  become: yes
  become_method: sudo
  vars_files:
    - vars/liberty_vars.yml
    - vars/liberty_passwords.yml
  tasks:
    - name: Install SQL DB Packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        install_recommends: yes
      with_items: "{{ db_packages }}"
    - name: Copy MariaDB Configfile Template
      copy:
        src: etc/mysqld_openstack.cnf.defaults
        dest: /etc/mysql/conf.d/mysqld_openstack.cnf
        owner: root
        group: root
        mode: 0644
        backup: yes

# Edit the /etc/mysql/conf.d/mysqld_openstack.cnf on the remote
# host and replace ANSIBLE_MGMT_IP with the host management IP
    - name: Update the MariaDB Configfile
      replace:
        dest: /etc/mysql/conf.d/mysqld_openstack.cnf
        regexp: 'ANSIBLE_MGMT_IP'
        replace: "{{ ANSIBLE_MGMT_IP }}"
        backup: yes
    - name: Restart mysql
      service: 
        name: mysql
        enabled: yes
        state: restarted

# Run the equivalent of sudo mysql_secure_installation
# Modified from https://github.com/PCextreme/ansible-role-mariadb/blob/master/tasks/mysql_secure_installation.yml
    - name: Set MariaDB root Password
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ DB_PASS }}"
        state: present
      with_items: "{{ DB_HOSTS }}"
    - name: Remove anonymous users
      mysql_user:
        name: ''
        state: absent
      changed_when: False
    - name: Disallow root login remotely
      command: 'mysql -NBe "{{ item }}"'
      with_items:
        - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
      changed_when: False
    - name: Remove test database and access to it
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - DROP DATABASE test
        - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
      changed_when: False
      ignore_errors: True
    - name: Reload privilege tables
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES
      changed_when: False
...
